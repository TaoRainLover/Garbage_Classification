<template>
  <div class="container" style="height: {{ windowHeight }}">
    <!-- banner区域 -->
    <div class="banner">
      <swiper indicator-dots indicator-active-color="#4bae32" autoplay circular>
        <block wx:for="{{bannerImgList}}" wx:key="*this">
          <swiper-item @click="navigateToNews">
            <image class="swiper-item" src="{{item}}" mode="aspectFill" />
          </swiper-item>
        </block>
      </swiper>
    </div>

    <!-- 垃圾分类知识科普区域 -->
    <div class="popularization">
      <p class="title">垃圾分类知识科普</p>
      <div class="content">
        <div class="item" wx:for="{{trashImgPathList}}" wx:key="*this">
          <img
            class="trashImg"
            @click="navToDetal"
            id="{{item.id}}"
            src="{{ item.path }}"
            alt=""
          />
          <p class="name">{{ item.type }}</p>
        </div>
      </div>
    </div>

    <!-- 搜索区域 -->
    <div class="search-box">
      <p class="title">搜索方式</p>
      <div class="item-box">
        <div class="text item" @click="navigateToSearch">
          <img class="icon" src="/static/image/icon/keyboard.png" />
          <p class="des">文字输入</p>
        </div>
        <div class="photo item" @click="navigateToCamera">
          <img class="icon" src="/static/image/icon/camera.png" />
          <p class="des">拍照识别</p>
        </div>
        <div
          class="voice item"
          @touchstart="voiceStarting"
          @touchend="voiceEnd"
        >
          <img class="icon" src="/static/image/icon/voice.png" />
          <p class="des">语音识别</p>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import wepy from '@wepy/core'
import eventHub from '../common/eventHub'
import { mapState } from '@wepy/x'
import store from '../store'
import testMixin from '../mixins/test'

wepy.page({
  store,
  config: {
    navigationBarTitleText: 'test',
  },

  hooks: {
    // Page 级别 hook, 只对当前 Page 的 setData 生效。
    // 'before-setData': function (dirty) {
    //   if (Math.random() < 0.2) {
    //     console.log('setData canceled');
    //     return false; // Cancel setData
    //   }
    //   dirty.time = +new Date();
    //   return dirty;
    // }
  },

  mixins: [testMixin],

  data: {
    windowHeight: 0,
    bannerImgList: [
      'https://rainlover.fun:8002/gb/banner2/1.jpg',
      'https://rainlover.fun:8002/gb/banner2/2.jpg',
      'https://rainlover.fun:8002/gb/banner2/3.jpg',
      'https://rainlover.fun:8002/gb/banner2/4.jpg',
    ],
    trashImgPathList: [
      { id: 1, type: '可回收物', path: '/static/image/trash/1.png' },
      { id: 2, type: '其他垃圾', path: '/static/image/trash/2.png' },
      { id: 3, type: '厨余垃圾', path: '/static/image/trash/3.png' },
      { id: 4, type: '有害垃圾', path: '/static/image/trash/4.png' },
    ],

    // 记录语音录制结果的路径
    recorderManager: Object,
    audio_path: '',
    audio_data: '',
  },

  computed: {},

  methods: {
    // 跳转到垃圾分类科普页面
    navToDetal(item) {
      const id = item.target.id
      wx.navigateTo({
        url: '/packageBuild/pages/popularization?id=' + id,
      })
    },
    // 跳转到相机页面
    navigateToCamera() {
      wx.navigateTo({
        url: '/packageBuild/pages/camera',
      })
    },
    // 跳转到文字搜索页面
    navigateToSearch() {
      wx.navigateTo({
        url: '/packageBuild/pages/search',
      })
    },

    // 跳转到新闻页面
    navigateToNews() {
      console.log('banner')

      wx.switchTab({ url: './find' })
    },

    // 长按语音录制
    voiceStarting() {
      console.log('录制开始')
      wx.showToast({
        title: '录制中...',
        icon: 'loading',
        image: '/static/image/icon/voice-on.png',
        duration: 10000,
        success: () => {
          // 开始录音
          const options = {
            duration: 60000,
            sampleRate: 16000,
            numberOfChannels: 1,
            encodeBitRate: 48000,
            format: 'PCM',
            // frameSize: 50
          }
          this.recorderManager.start(options)
        },
      })
    },
    voiceEnd() {
      wx.hideToast({
        success: () => {
          // 结束录音
          this.recorderManager.stop()
        },
      })
    },
  },

  // 生命周期函数 created
  created() {
    this.windowHeight = this.$app.$options.globalData.windowHeight + 'px'
    console.log(this.windowHeight)

    // 获取全局唯一的录音管理器 RecorderManager
    this.recorderManager = wx.getRecorderManager()
    // 监听 录音管理器 开始事件
    this.recorderManager.onStart(() => {
      console.log('recorder start')
    })
    // 监听 录音管理器 结束事件
    this.recorderManager.onStop((res) => {
      console.log('recorder stop', res)
      // const { tempFilePath } = res
      this.audio_path = res.tempFilePath
      //TODO: 将录音文件通过 百度识别API 转换为文字
      const params = {
        grant_type: 'client_credentials',
        client_id: 'eee2OGMye9NCSjFcncLrFIYv',
        client_secret: 'b23GzAnoDucrDQsMCMAcWe5MCXoqS62q',
      }
      // 1. 获取 授权 access_token
      wx.request({
        url: 'https://aip.baidubce.com/oauth/2.0/token',
        data: params,
        success: (res) => {
          const { data } = res
          const access_token = data.access_token
          console.log('access_token', access_token)
          // 2. 将录音文件数据读取出来
          const fs = wx.getFileSystemManager()
          fs.readFile({
            filePath: this.audio_path,
            success: (res) => {
              this.audio_data = res.data
              // 3. 进行语音识别
              wx.request({
                url: `https://vop.baidu.com/server_api?dev_pid=1537&cuid=rainloverminiapp&token=${access_token}`,
                method: 'POST',
                data: this.audio_data,
                header: { 'Content-Type': 'audio/pcm;rate=16000' },
                success: (res) => {
                  console.log('语音识别成功，结果如下')
                  // console.log(res.data)
                  if (res.data.err_no !== 0) {
                    // 识别出错
                    wx.showToast({
                      title: '识别出错，请稍有再试!',
                      icon: 'none',
                    })
                  } else {
                    // 识别成功
                    let text_recognize = res.data.result[0]
                    // 去除句号
                    // console.log(text_recognize)
                    text_recognize = text_recognize.slice(0, -1)
                    console.log(text_recognize)
                    // TODO：携带语音识别结果跳转到搜索界面
                    wx.navigateTo({
                      url:
                        '/packageBuild/pages/search?search_text=' +
                        text_recognize,
                    })
                  }
                },
                fail: (err) => {
                  console.log(err)
                },
              })
            },
          })
        },
      })
    })
  },
})
</script>

<style lang="less" scoped>
.container {
  // position: relative;
}

// banner区域
.banner {
  height: 435rpx;
  swiper {
    height: 100%;
  }
  .swiper-item {
    height: 100%;
    width: 100%;
    background-color: #f7f9f7;
  }
}

// 垃圾分类知识科普区域
.popularization {
  margin-top: 30rpx;
  padding: 0 30rpx;
  .title {
    font-size: 40rpx;
    font-weight: bold;
    padding-left: 4rpx;
    color: rgba(2, 20, 55, 0.8);
  }
  .content {
    display: flex;
    justify-content: space-between;
    .item {
      display: flex;
      flex-direction: column;
      align-items: center;
      .trashImg {
        height: 220rpx;
        width: 164rpx;
        box-sizing: border-box;
        padding: 20rpx 10rpx 20rpx 0;
      }
      .name {
        font-size: 24rpx;
        margin-left: 14rpx;
      }
    }
  }
}

// 搜索区域
.search-box {
  height: 400rpx;
  width: 100%;
  background-color: skyblue;
  position: absolute;
  bottom: 0;
  background: #ffffff;
  box-shadow: 0 -4rpx 20rpx rgba(169, 185, 166, 0.25);
  border-radius: 120rpx 120rpx 0 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  .title {
    font-size: 40rpx;
    font-weight: bold;
    color: #34435f;
    margin-top: 56rpx;
  }
  .item-box {
    display: flex;
    align-items: center;
    margin-top: 52rpx;
    .item {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .icon {
        width: 80rpx;
        height: 80rpx;
      }
      .des {
        font-size: 24rpx;
        color: white;
      }
    }
    .text {
      height: 154rpx;
      width: 154rpx;
      background-color: #4bae32;
      border-radius: 50%;
    }
    .photo {
      height: 194rpx;
      width: 194rpx;
      background-color: #4bae32;
      margin: 0 62rpx;
      border-radius: 50%;
    }
    .voice {
      height: 154rpx;
      width: 154rpx;
      background-color: #4bae32;
      border-radius: 50%;
    }
  }
}
</style>
<wxs module="m1" lang="babel">
const getTime = (time) => {
  let date = getDate(time);
  let hour = date.getHours();
  let mins = date.getMinutes();
  let sec = date.getSeconds();
  let milli = date.getMilliseconds();
  return `${hour}:${mins}:${sec}.${milli}`;
}
module.exports.getTime = getTime;
</wxs>

<config>
{
    navigationBarTitleText: '智能垃圾分类帮手',
    enablePullDownRefresh:false,
    usingComponents: {
      // 'van-button': '../components/van/button/index'
    }
}
</config>
